class Node:
    def __init__(self,data=None,next=None):
        self.data=data
        self.next=next
class Linkedlist:
    def __init__(self):
        self.head=None
    def insert_begin(self,data):
        node=Node(data,self.head)
        self.head=node
    def insert_end(self,data):
        if(self.head is None):
            print("Linked list is empty")
            return None
        else:
            itr=self.head
            while itr.next:
                itr=itr.next
        itr.next=Node(data,None)
    def get_length(self):
        count=0
        if(self.head==None):
            return 0
        else:
            itr=self.head
            while(itr.next):
                count+=1
                itr=itr.next
        return count
    def remove_at(self,index):
        if(index==0):
            self.head=self.head.next
        elif(index<0 or index>self.get_length()):
            return("Invalid input")
        else:
            count=0
            itr=self.head
            while(itr):
                if(count==index-1):
                    itr.next=itr.next.next
                    break
                itr=itr.next
                count+=1
                    
    #def insert_after(self,)
        
    def print(self):
        if(self.head is None):
            print("Linked list is empty")
            return None
        itr=self.head
        ll=""
        while( itr):
            ll+=str(itr.data)+"->"
            itr=itr.next
        print(ll)
    

ll=Linkedlist()
ll.insert_begin(4)
ll.insert_begin(10)
ll.insert_begin(25)
ll.insert_end(30)
ll.get_length()
ll.remove_at(1)
ll.print()

Output:
25->4->30->
    
        
